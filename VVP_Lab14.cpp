#include <stdio.h>
#include <math.h>
#include <locale.h>
int main()
{
	char* locale = setlocale(LC_ALL, "Rus");

	//1)Даны целые положительные числа A и B (A < B). 
	//Вывести все целые числа от A до B включительно; 
	//при этом каждое число должно выводиться столько раз, каково его значение (например, число 3 выводится 3 раза).

	int a1, b1; //Числа A и B
	int j1; //Текущее число
	int i1; //Количество повторов
	int ch; //Число от А до В

	printf("1)\nЦелые положительные числа A и B (A < B)\nA = ");
	scanf_s("%d", &a1); //Ввод A
	printf("B = ");
	scanf_s("%d", &b1); //Ввод B
	for (j1 = a1; j1 <= b1; j1++)
	{
		ch = j1;
		for (i1 = 1; i1 <= ch; i1++)
		{
			printf("%d ", ch); //Вывод результата
		}
		printf("\n");
	}


	//2)Даны положительные числа A и B (A > B). 
	//На отрезке длины A размещено максимально возможное количество отрезков длины B (без наложений). 
	//Не используя операции умножения и деления, найти длину незанятой части отрезка A.

	double a2, b2; //Длины отрезков A и B
	double j2; //Часть отрезка А,занимаемая отрезками В
	double dn; //Длина незанятой части отрезка A

	printf("\n2)\nПоложительные числа A (длина большого отрезка) и B (длина каждого маленького отрезка) (A > B)\nA = ");
	scanf_s("%lf", &a2); //Ввод A
	printf("B = ");
	scanf_s("%lf", &b2); //Ввод B
	for (j2 = 0; j2 <= a2; j2 = j2 + b2)
	{
		dn = a2 - j2;
	}
	printf("Длина незанятой части отрезка A = %lf", dn); //Вывод результата


	//3)Дано целое число N (> 1). 
	//Вывести наименьшее из целых чисел K, 
	//для которых сумма 1 + 2 + . . . + K будет больше или равна N, и саму эту сумму.

	int n3; //N
	int j3; //Текущее число (слагаемое)
	int k3; //К
	int s3; //Сумма

	printf("\n\n3)\n1 + 2 + ... + K >= N\nЦелое число N (> 1) = ");
	scanf_s("%d", &n3); //Ввод N

	for (j3 = 1, s3 = 0; s3 < n3; j3++)
	{
		k3 = j3;
		s3 = s3 + j3;
	}
	printf("K (наименьшее) = %d\nCумма = %d", k3, s3); //Вывод результата


	//4)Начальный вклад в банке равен 1000 руб. 
	//Через каждый месяц размер вклада увеличивается на P процентов от имеющейся суммы (P — вещественное число, 0 < P < 25). 
	//По данному P определить, через сколько месяцев размер вклада превысит 1100 руб., 
	//и вывести найденное количество месяцев K (целое число) и итоговый размер вклада S (вещественное число).

	double p; //Проценты P
	int j4; //Текущий месяц
	int k4; //Месяцы K
	double s4; //Итоговый размер вклада S

	printf("\n\n4)\nНачальный вклад в банке равен 1000 руб.\nПроценты P (P — вещественное число, 0 < P < 25) = ");
	scanf_s("%lf", &p); //Ввод P

	for (j4 = 1, s4 = 1000; s4 <= 1100; j4++)
	{
		k4 = j4;
		s4 = s4 + s4 * 0.01 * p;
		//printf("%d", k4);
		//printf("%d %lf\n", k4, s4);
	}
	printf("K (количество месяцев за которые размер вклада превысит 1100 руб.) = %d\nS (итоговый размер вклада) = %lf руб.", k4, s4); //Вывод результата


	//5)Даны целые положительные числа A и B. 
	//Найти их наибольший общий делитель (НОД), используя алгоритм Евклида

	int a5, b5; //A и B
	int x5; //Вспомогательная переменная
	int nod; //,НОД
	int max, min; //Наибольшее и наименьшее

	printf("\n\n5)\nЦелые положительные числа A и B\nA = ");
	scanf_s("%d", &a5); //Ввод A
	printf("B = ");
	scanf_s("%d", &b5); //Ввод B
	if (a5 > b5)
	{
		max = a5;
		min = b5;
	}
	else
	{
		max = b5;
		min = a5;
	}
	nod = a5;
	while (max > min)
	{
		nod = max - min;
		max = nod;
		if (max < min)
		{
			x5 = max;
			max = min;
			min = x5;
		}
	}
	printf("НОД = %d", nod); //Вывод результата


	//6)Дано целое число N (> 1), являющееся числом Фибоначчи: N = FK. 
	//Найти целое число K — порядковый номер числа Фибоначчи N.

	int n6; //N
	int j6 = 0, i6 = 1; //Первое и второе числа Фибоначчи
	int k6 = 1; //K
	int x6 = 0; //Сумма двух соседних чисел Фибоначчи

	printf("\n\n6)\nЦелое число N (> 1), являющееся числом Фибоначчи: N = FK\nN = ");
	scanf_s("%d", &n6); //Ввод N
	if (n6 > 1)
		k6 = 2;
	while (x6 < n6)
	{
		x6 = j6 + i6;
		j6 = i6;
		i6 = x6;
		k6++;
	}
	if (n6 == 1)
		printf("K (порядковый номер числа Фибоначчи N) = 2 и 3"); //Вывод результата
	else
		printf("K (порядковый номер числа Фибоначчи N) = %d", k6); //Вывод результата
}